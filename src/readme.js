/*
Write a function fizzBuzz(max) that accepts a number as an arg.
The function should return an array containing all positive numbers less than max
that are divisible by either 3 or 5, but not both.
*/

/*
Write a function doubleSequence that accepts a base and a length as arguments.
The function should return an array representing a sequence that contains "length" elements.
The first element of the sequence is always the "base",
the subsequent elements can be generated by doubling the previous element of the sequence.
*/

/*
Write a function unique that accepts an array as an argument.
The function should return a new array containing elements of the input array, without duplicates.
 */

/*
Write a function chooseyEndings that accepts an array of words and a suffix string as arguments.
The function should return a new array containing the words that end in the given suffix.
If the value passed in is not an array, return an empty array.
HINT: There are built in JavaScript functions that will help with determining if a strings
ends a certain way. Go see if you can find it on MDN!
   */

/*
A number's summation is the sum of all positive numbers less than or equal to the number.
For example: the summation of 3 is 6 because 1 + 2 + 3 = 6,
the summation of 6 is 21 because 1 + 2 + 3 + 4 + 5 + 6 = 21.
Write a function summationSequence that takes in two numbers: start and length.
The function should return an array containing length total elements.
The first number of the sequence should be the start number.
At any point, to generate the next element of the sequence
we take the summation of the previous element.
You can assume that length is not zero.
 */
